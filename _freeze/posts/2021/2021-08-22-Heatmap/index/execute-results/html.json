{
  "hash": "73ba344fd517972ef29df9801ac9f63e",
  "result": {
    "markdown": "---\ntitle: Python作图-Heatmap\nauthor: 桑峰\ndate: 2021-08-22\nslug: blog\noutput: html_document\ncategories:\n  - Python\ntags:\n  - heatmap\n  - seaborn\n  - matplotlib\n---\n\n\n本文用于记录笔者在使用seaborn绘制heatmap中遇到的一些问题和解决方法。\n\n完整的代码如下所示：\n\n```python\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport matplotlib.font_manager as fm\nimport matplotlib.ticker as ticker\nsns.set_theme(style=\"white\")\n\nmat = np.random.rand(68*68)\nmat = mat.reshape((68, 68))\nlabels = pd.DataFrame({'Name': range(1, 69)})\n\n\ncmap = sns.color_palette('flare', as_cmap=True)\n\nfont = fm.FontProperties(fname='Resource/font/calibri.ttf')\n\np = sns.heatmap(\n    mat,\n    mask=(mat==0),\n    cmap=cmap,\n    square=True,\n    xticklabels=True,\n    yticklabels=True,\n    center=0.75,\n    vmin=0.5)\n\nax = p.figure.axes[0]\nax.axvline(34, color='k', alpha=0.8, linestyle='-', linewidth=0.8)\nax.axhline(34, color='k', alpha=0.8, linestyle='-', linewidth=0.8)\nax.set_title('Title of Heatmap', fontproperties=font, fontsize=14)\nax.set_xticklabels(labels['Name'], fontproperties=font, fontsize=4)\nax.set_yticklabels(labels['Name'], fontproperties=font, fontsize=4)\n\nbarax = p.figure.axes[1]\nbarax.set_ylabel('Mean Value', fontproperties=font, fontsize=12)\nbarticks = barax.get_yticks()\ntickformat = '{:.1f}'\nbarax.yaxis.set_major_locator(ticker.FixedLocator(barticks))\nbarax.set_yticklabels([tickformat.format(x) for x in barticks], fontproperties=font, fontsize=10)\nbarax.tick_params(direction='in', width=0)\n\nplt.savefig('demo.png', bbox_inches='tight', dpi=500)\n```\n\n<center>\n    <img style=\"width:50%;\" \n    src=\"./img/fig_1.png\">\n    <br>\n    <div style=\"color:orange; border-bottom: 1px solid #d9d9d9;\n    display: inline-block;\n    color: #999;\n    padding: 2px;\">图1. 示例结果</div>\n</center>\n\n\n# 解释\n\n导入相关包：\n\n```python \nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport matplotlib.font_manager as fm\nimport matplotlib.ticker as ticker\n# 设置显示主题\nsns.set_theme(style=\"white\")\n```\n\n数据准备：\n\n```python \n# 生成68x68的随机数矩阵\nmat = np.random.rand(68*68)\nmat = mat.reshape((68, 68))\n# 热图标签\nlabels = pd.DataFrame({'Name': range(1, 69)})\n```\n\n颜色映射：\n\n```python \ncmap = sns.color_palette('flare', as_cmap=True)\n```\n\n选择matplotlib中的flare配色。如图2所示。\n\n<center>\n    <img style=\"width:50%;\" \n    src=\"./img/fig_2.png\">\n    <br>\n    <div style=\"color:orange; border-bottom: 1px solid #d9d9d9;\n    display: inline-block;\n    color: #999;\n    padding: 2px;\">图2. flare配色</div>\n</center>\n\n\n字体设置：\n\n```python \nfont = fm.FontProperties(fname='Resource/font/calibri.ttf')\n```\n\nfname为自定义字体存放位置。\n\n绘图：\n\n```python \np = sns.heatmap(\n    mat,\n    mask=(mat==0),\n    cmap=cmap,\n    square=True,\n    xticklabels=True,\n    yticklabels=True,\n    center=0.75,\n    vmin=0.5)\n```\n\nmat为显示的矩阵；mask是和mat相同大小的0/1矩阵，其中1表示相应位置不在热图中显示；cmap为颜色映射；square为True表示设置热图中每个小格子为正方形；xticklabels和yticklabels为True表示显示热图横纵坐标轴标尺标签；center表示Colorbar中心处颜色对应的数值；vmin为Colorbar中最低颜色对应的数值。\n\n热图区域设置：\n\n```python \n# 获取矩形图对象\nax = p.figure.axes[0]\n# 添加竖直线x=34\nax.axvline(34, color='k', alpha=0.8, linestyle='-', linewidth=0.8)\n# 添加水平线y=34\nax.axhline(34, color='k', alpha=0.8, linestyle='-', linewidth=0.8)\n# 设置标题，并应用自定义字体\nax.set_title('Title of Heatmap', fontproperties=font, fontsize=14)\n# 设置横纵坐标轴标尺标签，并应用自定义字体\nax.set_xticklabels(labels['Name'], fontproperties=font, fontsize=4)\nax.set_yticklabels(labels['Name'], fontproperties=font, fontsize=4)\n```\n\n该figure中包含两个axes，第一个是矩形图本身，第二个axes是Colorbar的区域。\n\nColorbar设置：\n\n```python \n# 获取Colorbar对象\nbarax = p.figure.axes[1]\n# 设置Colorbar标题\nbarax.set_ylabel('Mean Value', fontproperties=font, fontsize=12)\n# 获取Colorbar中y轴标尺\nbarticks = barax.get_yticks()\n# 标尺显示数字格式为保留1位小数位的浮点数\ntickformat = '{:.1f}'\n# 设置y轴标尺，并设置其标签，字体自定义\nbarax.yaxis.set_major_locator(ticker.FixedLocator(barticks))\nbarax.set_yticklabels([tickformat.format(x) for x in barticks], fontproperties=font, fontsize=10)\n# 设置标尺形状，即坐标轴数字对应的短线。这里为了美观，不显示标尺短线。\nbarax.tick_params(direction='in', width=0)\n```\n\n保存图片：\n\n```python \n# 保存图片，并设为dpi为500\nplt.savefig('demo.png', bbox_inches='tight', dpi=500)\n```\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}